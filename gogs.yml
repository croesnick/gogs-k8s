---
kind: Service
apiVersion: v1
metadata:
  name: gogs-svc
spec:
  ports:
    - name: gogs-http
      protocol: TCP
      port: 80
      targetPort: gogs-http
    - name: gogs-ssh
      protocol: TCP
      port: 22
      targetPort: gogs-ssh
  selector:
    app: gogs
  type: ClusterIP

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gogs-pv-claim
  labels:
    app: gogs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: gogs-depl
  labels:
    app: gogs
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/-/metrics"
      labels:
        app: gogs
    spec:
      containers:
        - name: gogs
          image: gogs/gogs:latest
          env:
            # https://github.com/gogits/gogs/tree/master/docker#container-options
            - name: SOCAT_LINK
              value: "false"
          livenessProbe:
            initialDelaySeconds: 180
            httpGet:
              path: /
              port: gogs-http
          ports:
            - name: gogs-ssh
              containerPort: 22
            - name: gogs-http
              containerPort: 3000
          readinessProbe:
            initialDelaySeconds: 180
            httpGet:
              path: /
              port: gogs-http
          resources:
            requests:
              cpu: 100m
              memory: 512m
          volumeMounts:
            - name: gogs-storage
              mountPath: /data
      initContainers:
        - name: gogs-write-main-config
          command: ["/bin/sh"]
          args:
            - "-c"
            - >-
              mkdir -p /data/gogs/conf &&
              python /bin/custom/inject.py /custom/app.ini > /data/gogs/conf/app.ini
          envFrom:
            - secretRef:
                name: gogs-secrets
                optional: false
          image: python:3.7-alpine
          volumeMounts:
            - name: gogs-storage
              mountPath: /data
            - name: gogs-main-config
              mountPath: /custom
            - name: gogs-secret-inject-script
              mountPath: /bin/custom
              readOnly: true
      volumes:
        - name: gogs-storage
          persistentVolumeClaim:
            claimName: gogs-pv-claim
        - name: gogs-main-config
          configMap:
            name: gogs-main-config
            items:
              - key: app.ini
                path: app.ini
        - name: gogs-secret-inject-script
          configMap:
            name: ini-secret-inject-script
            items:
              - key: ini-inject-secrets.py
                path: inject.py
